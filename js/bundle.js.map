{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qEAAqE;AACrE;AACA;AACA;AACA,yDAAyD;AACzD;AACA,mBAAmB;AACnB;AACA;AACA;AACA,6GAA6G;AAC7G,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,oEAAoE;AACpE;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,aAAa;AACb,SAAS;AACT;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,iCAAiC;AACjC;AACA;AACA;AACA,yBAAyB;AACzB,sDAAsD;AACtD;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,iDAAiD;AACjD;AACA,iFAAiF;AACjF;AACA,2BAA2B,UAAU,MAAM,YAAY;AACvD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,iEAAiE,WAAW;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,IAAI,YAAY,WAAW;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,MAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAwD;AACxD,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK;AACL;AACA,mCAAmC;AACnC;AACA;AACA,KAAK;AACL;AACA,wDAAwD;AACxD,mCAAmC;AACnC,8HAA8H;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA,uBAAuB;AACvB,mBAAmB;AACnB;AACA;AACA,wDAAwD;AACxD;AACA,4CAA4C;AAC5C;AACA,kCAAkC;AAClC,KAAK;AACL,uCAAuC;AACvC;AACA;AACA,kBAAkB;AAClB,oDAAoD;AACpD;AACA;AACA,oBAAoB,mBAAmB,KAAK;AAC5C;AACA,iDAAiD;AACjD;AACA;AACA,uBAAuB;AACvB;AACA,oCAAoC;AACpC,UAAU;AACV;AACA;AACA;AACA;AACA,oCAAoC,cAAc;AAClD,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,iDAAiD;AACjD;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,uCAAuC;AACvC;AACA,qDAAqD,OAAO,KAAK;AACjE;AACA,0CAA0C;AAC1C,2BAA2B;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,qDAAqD,OAAO,KAAK;AACjE;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA,sDAAsD;AACtD,yDAAyD,OAAO;AAChE;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCzDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,mBAAmB,mBAAO,CAAC,gDAAkB;AAC7C,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","sources":["webpack://food_dist/./js/modules/calc.js","webpack://food_dist/./js/modules/cards.js","webpack://food_dist/./js/modules/forms.js","webpack://food_dist/./js/modules/modal.js","webpack://food_dist/./js/modules/slider.js","webpack://food_dist/./js/modules/tabs.js","webpack://food_dist/./js/modules/timer.js","webpack://food_dist/webpack/bootstrap","webpack://food_dist/./js/script.js"],"sourcesContent":["function calc(){\r\n    // Calculator\r\n    const result = document.querySelector(\".calculating__result span\");\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem(\"sex\")){//проверяем есть ли данные по 1 и 3 блокам в локал сторадж, если да, то подставляем их в калькулятор, если нет - дефолтные и сохраняем их в локалсторадж\r\n        sex = localStorage.getItem(\"sex\");\r\n    }else{\r\n        sex = \"female\";\r\n        localStorage.setItem(\"sex\", \"female\");\r\n    }\r\n\r\n    if (localStorage.getItem(\"ratio\")){\r\n        ratio = localStorage.getItem(\"ratio\");\r\n    }else{\r\n        ratio = 1.375;\r\n        localStorage.setItem(\"ratio\", \"1.375\");\r\n    }\r\n    \r\n    function setActiveClass (selector, activeClass){//устанавливаем класс активности на ту кнопку, кот сохранена в локально\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem =>{\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute(\"id\") === localStorage.getItem(\"sex\")){\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute(\"data-ratio\") === localStorage.getItem(\"ratio\")){\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n    setActiveClass(\"#gender div\", \"calculating__choose-item_active\");//вызываем Ф для дивов из каждого блока отдельно\r\n    setActiveClass(\".calculating__choose_big div\", \"calculating__choose-item_active\");\r\n    \r\n    function calcTotal () {\r\n        if(!sex || !height || !weight || !age || !ratio){//проверяем все ли поля заполнены данными\r\n            result.textContent = \"_____\";\r\n            return;//не считаем дальше, если условие выполнилось\r\n        }\r\n       \r\n        if (sex === \"female\"){\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);//результат округляем до ближайшего целого числа\r\n        }else{\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n    calcTotal();\r\n\r\n    function getStaticInfo (seletor, activeClass){\r\n        const elements = document.querySelectorAll(`${seletor}`);\r\n\r\n        elements.forEach((elem) => {\r\n            elem.addEventListener(\"click\", (event) => {\r\n                if (event.target.getAttribute(\"data-ratio\")){//если кнопка, на кот кликнули содержит дата аттрибут, то это последний блок, берем себе значение этого аттрибута\r\n                    ratio = +event.target.getAttribute(\"data-ratio\");\r\n                    localStorage.setItem(\"ratio\", +event.target.getAttribute(\"data-ratio\"));\r\n                }else{//если нет, то это первый блок и мы берем пол\r\n                    sex = event.target.getAttribute(\"id\");\r\n                    localStorage.setItem(\"sex\", event.target.getAttribute(\"id\"));\r\n                }\r\n\r\n                elements.forEach(item => {//меняем при клике класс активности\r\n                    item.classList.remove(activeClass);\r\n                });                    \r\n                event.target.classList.add(activeClass);\r\n\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n    getStaticInfo(\"#gender div\", \"calculating__choose-item_active\");//вызываем Ф для дивов из каждого блока отдельно, класс активности одинаковый\r\n    getStaticInfo(\".calculating__choose_big div\", \"calculating__choose-item_active\");\r\n\r\n    function getDynamicInfo (field) {//Ф для каждого поля ввода\r\n        const inputs = document.querySelectorAll(field);\r\n        inputs.forEach(input => {\r\n            input.addEventListener(\"input\", () => {\r\n                if (input.value.match(/\\D/g)){//добавляем проверку, чтобы подсветить поле, где неверно введена информация, т.е содержатся не цифры!\r\n                    input.style.border = \"1px solid red\";\r\n                }else{\r\n                    input.style.border = \"none\";\r\n                }\r\n\r\n               switch(input.getAttribute(\"id\")) {//проверяем значение id, в каждом кейсе присваиваем значение своей переменную\r\n                    case \"height\": \r\n                    height = +input.value;\r\n                    break;\r\n\r\n                    case \"weight\": \r\n                    weight = +input.value;\r\n                    break;\r\n\r\n                    case \"age\": \r\n                    age = +input.value;\r\n                    break;\r\n                }\r\n                calcTotal();//для динамического пересчета данных\r\n            });          \r\n        });\r\n    }\r\n    getDynamicInfo(\"#height\");//вызываем Ф для каждого поля\r\n    getDynamicInfo(\"#weight\");\r\n    getDynamicInfo(\"#age\");\r\n\r\n}\r\n\r\nmodule.exports = calc;","function cards(){\r\n    //Используем классы для карточек\r\n\r\n    class MenuCard {\r\n        constructor(img, altimg, title, descr, price, parentSelector, ...classes) {\r\n            this.img = img;\r\n            this.altimg = altimg;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transform = 9; //задаем курс валют (статическое значение), В дальнейшем будет использоваться более сложный механизм, курс валюты будет подгружаться из стороннего источника\r\n            this.convertToUHA(); //запускаем тут же Ф по конвертации валюты\r\n\r\n        }\r\n\r\n        convertToUHA() { //доп.функционал для конвертации цены, данной в долларах в гривны. \r\n            this.price = this.price * this.transform; //перезаписываем значение price\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement(\"div\");\r\n            if (this.classes.length === 0) { //на случай, если разраб не добавил каких-л классов в ...classes\r\n                this.classes.push(\"menu__item\"); //в нашем случае эл-ту обязательно надо добавить \"menu__item\" класс, т.к именно в нем прописано поведение эл-в меню на странице, иначе верстка поплывет\r\n            }\r\n            this.classes.forEach(className => element.classList.add(className)); //перебираем все классы, указанные в качестве аргументов во вновьсозданных объектах и каждый присваеваем эл-ту, который вставляем на страницу\r\n            element.innerHTML = `\r\n                <img src=${this.img} alt=${this.altimg}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span></span>${this.price}грн/день</div>  \r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    const getResource = async (url) => {\r\n        const res = await fetch(url);\r\n        if (!res.ok) {\r\n            throw new Error(`Could not get data from ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    };\r\n\r\n    getResource(\"http://localhost:3000/menu\")\r\n        .then(obj => {\r\n            obj.forEach(({\r\n                img,\r\n                altimg,\r\n                title,\r\n                descr,\r\n                price\r\n            }) => {\r\n                new MenuCard(img, altimg, title, descr, price, \".menu .container\").render();\r\n            });\r\n        });\r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n    //FORMS\r\n\r\n    const forms = document.querySelectorAll(\"form\");\r\n\r\n    const message = {\r\n        loading: \"icons/spinner.svg\", //путь к картинке\r\n        success: \"Спасибо, мы свяжемся с Вами в ближайшее время\",\r\n        failure: \"Что-то пошло не так...\"\r\n    };\r\n\r\n    forms.forEach(item => {\r\n        bindPostForm(item);\r\n    });\r\n\r\n    const postForm = async (url, data) => {\r\n        const res = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }, //убрать, если formData\r\n            /* body: dataBody,//вернуть, если formData */\r\n            body: data,\r\n        });\r\n\r\n        return await res.json();\r\n    };\r\n\r\n    function bindPostForm(form) {\r\n        form.addEventListener(\"submit\", (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement(\"img\");\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n            display: block;\r\n            margin: 0 auto;\r\n            `;\r\n            form.insertAdjacentElement(\"afterend\", statusMessage);\r\n\r\n            const dataBody = new FormData(form);\r\n\r\n            const json = JSON.stringify(Object.fromEntries(dataBody.entries())); // JSON.stringify преобразует значение JavaScript в строку JSON\r\n\r\n            postForm(\"http://localhost:3000/requests\", json)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    showThanksModal(message.success);\r\n                    statusMessage.remove();\r\n                })\r\n                .catch(() => {\r\n                    showThanksModal(message.failure);\r\n                })\r\n                .finally(() => {\r\n                    form.reset();\r\n                });\r\n        });\r\n    }\r\n\r\n    function showThanksModal(alert) {\r\n        const previousModal = document.querySelector(\".modal__dialog\");\r\n\r\n        previousModal.classList.add(\"hide\");\r\n        showModal();\r\n\r\n        const thanksModal = document.createElement(\"div\");\r\n        thanksModal.classList.add(\"modal__dialog\");\r\n        thanksModal.innerHTML = `\r\n        <div class=\"modal__content\">\r\n            <div data-close class=\"modal__close\">&times</div>\r\n            <div class=\"modal__title\">${alert}</div>\r\n        </div>\r\n        `;\r\n        document.querySelector(\".modal\").append(thanksModal);\r\n\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            previousModal.classList.add(\"show\");\r\n            previousModal.classList.remove(\"hide\");\r\n            closeModal();\r\n        }, 8000);\r\n    }\r\n\r\n    /* fetch(\"http://localhost:3000/menu\")//шпора по fetch\r\n        .then(data => data.json())\r\n        .then(res => (console.log(res))) */\r\n}\r\n\r\nmodule.exports = forms;","function modal(){\r\n    //Modal\r\n    const modalTrigger = document.querySelectorAll(\"[data-modal]\"),\r\n        modal = document.querySelector(\".modal\");\r\n\r\n    function showModal() {\r\n        modal.classList.add(\"show\");\r\n        modal.classList.remove(\"hide\");\r\n        document.body.style.overflow = \"hidden\";\r\n        clearInterval(modalTimerID); //отменить повторный вызов модельного окна по команде setInterval\r\n    }\r\n\r\n    function closeModal() {\r\n        modal.classList.add(\"hide\");\r\n        modal.classList.remove(\"show\");\r\n        document.body.style.overflow = \"\";\r\n    }\r\n\r\n    modalTrigger.forEach(btn => {\r\n        btn.addEventListener(\"click\", showModal);\r\n    });\r\n\r\n    /* modalClose.addEventListener(\"click\", closeModal);//удалили modalClose, убрали обработчик,тк после отправки формы появится динамически созданное окно с крестиком, на которое этот обработчик не будет срабатывать */\r\n    modal.addEventListener(\"click\", (e) => { //закрыть модальное окнопри нажатии вне области самого окна или на крестик, а область вокруг - это div.modal\r\n        if (e.target == modal || e.target.getAttribute(\"data-close\") == '') {\r\n            closeModal();\r\n        }\r\n    });\r\n    document.addEventListener(\"keydown\", (e) => {\r\n        if (e.code === \"Escape\") { //закрыть модальное окнопри нажатии ESCAPE\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    const modalTimerID = setInterval(showModal, 50000); //показать модалку через 8 сек после того, как пользователь зашел на сайт\r\n    function showModalByScroll() { //показать модалку, если пользователь докрутил до низа страницы\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight /* - 1 */ ) { //если расстояние прокрученное от верха страницы (window.pageYOffset) + размер видимого окна клиента (docEl.clientHeight) >= всей доине док-та с учетом перемотки (docEl.scrollHeight)\r\n            showModal();\r\n            window.removeEventListener(\"scroll\", showModalByScroll);\r\n        }\r\n    }\r\n    window.addEventListener(\"scroll\", showModalByScroll);\r\n}\r\n\r\nmodule.exports = modal;","function slider(){\r\n    //SLIDER_difficult variant, but more up-to-date\r\n\r\n    const slides = document.querySelectorAll(\".offer__slide\"),\r\n        slider = document.querySelector(\".offer__slider\"),//весь эл-т, включая навигацию и номера\r\n        next = document.querySelector(\".offer__slider-next\"),\r\n        prev = document.querySelector(\".offer__slider-prev\"),\r\n        current = document.querySelector(\"#current\"),\r\n        total = document.querySelector(\"#total\"),\r\n        slidesWrapper = document.querySelector(\".offer__slider-wrapper\"),\r\n        slidesField = document.querySelector(\".offer__slider-inner\"),\r\n        width = window.getComputedStyle(slidesWrapper).width;//получить примененный к анному эл-ту стиль, а именно его ширину//650px\r\n        \r\n    let slideIndex = 1;//показываем по дефолту номер 1\r\n    let offset = 0;//показываем по дефолту нулевой эл-т из псевдомассива\r\n\r\n    slidesField.style.display = \"flex\";\r\n    slidesField.style.width = 100 * slides.length + \"%\";//если 4 слайда, то ш=400% от своего родителя\r\n    slidesField.style.transition = \"0.5s all\";\r\n    slidesWrapper.style.overflow = \"hidden\";//скрыть то, что не помещается в видимое окно\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;//убедиться, что размер новых картинок не будет превышать размер окна\r\n    });\r\n    slider.style.position = \"relative\";//для абсолютного позиционрования навигационных точек\r\n\r\n    const indicators = document.createElement(\"ol\"),//обертка для точек\r\n        dots = [];//все вновь созданные точки добавляем в данный массив\r\n    indicators.classList.add(\"carousel-indicators\");//добавили еще один файл со стилями, в нем есть точки и обертка для них\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++){//создаем кол-во точек равное кол-ву слайдов\r\n        const dot = document.createElement(\"li\");\r\n        dot.setAttribute(\"data-slide-to\", i + 1);//устанавливаем дата аттрибут со значением i+1, кот будет равен slideIndex\r\n        dot.classList.add(\"dot\");\r\n        indicators.append(dot);\r\n        dots.push(dot);//добавляем эл-ты в ранее созданный массив, чтобы навесить класс активности\r\n/*         if (i == 0){\r\n            dot.style.opacity = \"1\";//по дефолту устанавливаем активной первую кнопку\r\n        } */\r\n    }\r\n\r\n    function setSlideIndex () {\r\n        if (slides.length < 10) {\r\n            total.textContent = `0${slides.length}`;\r\n        } else {\r\n            total.textContent = slides.length;\r\n        }\r\n\r\n        if (slideIndex < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n    }\r\n    setSlideIndex();\r\n\r\n    function acivateDot () {\r\n        dots.forEach(dot => dot.style.opacity = \".5\");//у всех 50% прозрачности\r\n        dots[slideIndex - 1].style.opacity = \"1\";//100% цвета без прозрачности - показываем активную кнопку\r\n    }\r\n    acivateDot();\r\n\r\n    function getDigits (str) {\r\n        return +str.replace(/\\D/g, \"\");//получаем цифры с помощью регулярного выражения вместо метода slice, чтобы оптимизировать код и исключить ошибки в будущем\r\n    }\r\n\r\n    next.addEventListener(\"click\", () => {\r\n        if (offset == getDigits(width) * (slides.length - 1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += getDigits(width);//увеличиваем размер отступа на размер слайда\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;//сдвигаем слайдер влево за счет уменьшения офсета в минус\r\n            \r\n        if (slideIndex == slides.length) {//если дошли до последнего в карусели\r\n            slideIndex = 1;//переходим на первый\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n   \r\n        setSlideIndex();\r\n        acivateDot();\r\n    });\r\n\r\n    prev.addEventListener(\"click\", () => {\r\n        if (offset == 0) {\r\n            offset = getDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= getDigits(width);\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;//если в офсете получается отрицательное значение, то тут будет офсет увеличиваться, т.к минус на минус = +\r\n    \r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n        \r\n        setSlideIndex();\r\n        acivateDot();\r\n    });\r\n\r\n    dots.forEach((dot) => {\r\n        dot.addEventListener(\"click\", (event) => {\r\n            const slideTo = event.target.getAttribute(\"data-slide-to\");//получаем значение дата аттрибута \r\n            slideIndex = slideTo;\r\n\r\n            offset = getDigits(width) * (slideTo - 1);//контролируем размер отступа за счет дата аттрибута присвоенного при формировании эл-та\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            setSlideIndex();\r\n            acivateDot();\r\n        });\r\n    });\r\n}\r\n\r\nmodule.exports = slider;","function tabs() {\r\n    //TABS\r\n    const tabContent = document.querySelectorAll('.tabcontent'),\r\n        tabsWrapper = document.querySelector('.tabheader__items'),\r\n        tabs = document.querySelectorAll('.tabheader__item');\r\n\r\n    function hideTabContent() {\r\n        tabContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove(\"tabheader__item_active\");\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) { //задаем параметр по умолчаю, тогда можно запустить функцию не передавая туда аргументов. i=0 значит, что при загрузке страницы будет активироваться первая вкладка\r\n        tabContent[i].classList.add('show', 'fade');\r\n        tabContent[i].classList.remove('hide');\r\n\r\n        tabs[i].classList.add(\"tabheader__item_active\");\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsWrapper.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n\r\n        if (target && target.classList.contains('tabheader__item')) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = tabs;","function timer() {\r\n    //TIMER\r\n\r\n    const deadline = 'December 31, 2021';\r\n\r\n    function getTimeRemaining(endtime) {\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24)), //общее кол-во мс делим на мс в сутках (8,64e+7), с пом Math.floor() округляем до ближайшего меньшего целого\r\n            hours = Math.floor((t / (1000 * 60 * 60)) % 24), //оператор % - возвращает остаток от деления, например 5 % 2 = 1, то есть здесь мы общее кол-во мс делим на кол-во мс в часах (3,6e+6), получаем общее кол-во часов, далее получаем остаток от деления этого числа на 24, что составляет кол-во часов, кот не смогли составить полные сутки\r\n            minutes = Math.floor((t / 1000 / 60) % 60), //общее кол-во мс делим на мс в минутах и получаем остаток от деления на 60 (минут в часах), т.е те минуты, которые не смогли составить полный час\r\n            seconds = Math.floor((t / 1000) % 60);\r\n\r\n        return {\r\n            'total': t,\r\n            days, //short syntax for 'days': days,\r\n            hours,\r\n            minutes,\r\n            seconds\r\n        };\r\n    }\r\n\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n            days = document.querySelector('#days'),\r\n            hours = document.querySelector('#hours'),\r\n            minutes = document.querySelector('#minutes'),\r\n            seconds = document.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock();\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n                days.innerHTML = 0;\r\n                hours.innerHTML = 0;\r\n                minutes.innerHTML = 0;\r\n                seconds.innerHTML = 0;\r\n            }\r\n        }\r\n    }\r\n    setClock('.timer ', deadline);\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', () => {\r\n    const tabs = require(\"./modules/tabs\"),\r\n          modal = require(\"./modules/modal\"),\r\n          forms = require(\"./modules/forms\"),\r\n          slider = require(\"./modules/slider\"),\r\n          calc = require(\"./modules/calc\"),\r\n          cards = require(\"./modules/cards\"),\r\n          timer = require(\"./modules/timer\");\r\n\r\n    tabs();\r\n    modal();\r\n    forms();\r\n    slider();\r\n    calc();\r\n    cards();\r\n    timer();\r\n});"],"names":[],"sourceRoot":""}