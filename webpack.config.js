"use strict";

let path = require('path');//не трогать! техническая переменная, кот нужна для правильной работы

module.exports = {//объект настроек
  mode: 'development',//режим разработки, когда проект выпускаем на прод меняем на production
  entry: './js/script.js',//путь к основному файлу, в кот будут прописаны все зависимости require (или «импорт» из нового стандата). Это сокращенная запись, когда путь только к 1 файлу, если файлов несколько, то мы создаем объект
  output: {//файл, кот будет генериться в итоге
    filename: 'bundle.js',//название
    path: __dirname + '/js'//путь//dirname позволяет получить корень нашей папки
  },
  watch: true,//если true, то после того, как был вызван webpack будет следить за изменениями в файлах и в автоматическом режиме собирать проект каждый раз

  devtool: "source-map",//хранит информации о местоположении наших исходников, у него есть разные режимы, они отличаются, в осн это скорость работы и формат, в кот эта инфа отдается

  //модули и их настройка, также здесь через запятую может идти св-во plagins, в кот можно подключить доп плагины, если необходимо что-то помимо тех, что уже включены
  module: {
    rules: [
      {
        test: /\.m?js$/,//берем все js файлы через regex
        exclude: /(node_modules|bower_components)/,//какие файлы исключить из быборки
        use: {//в этом разделе говорим как и что будем использовать
          loader: 'babel-loader',//доп технология, кот будет связывать webpack вемсте с бэбелем (нужна установка)
          options: {//опции, кот мы будем использовать
            presets: [['@babel/preset-env', {//присет, кот мы настроим под себя
                debug: true,//включаем св-во дебаг, кот прям во время компиляции помогает увидеть что там происходит, какие могут быть проблемы и тд.
                corejs: 3,//еще одна библиотека с полифилами
                useBuiltIns: "usage"//встроенная Ф corejs, кот сканирует код и определяет только те полифилы, кот нам нужны, в отлич от бэбеля, кот устанавливает все 
            }]]
          }
        }
      }
    ]
  }
};
